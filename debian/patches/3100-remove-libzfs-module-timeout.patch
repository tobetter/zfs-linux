Reduce the timeout to zero seconds when running in a container (LP: #1760173)

When inside a lxd container with zfs storage, zfs list or zpool status
appears to hang, no output for 10 seconds. Check if we are inside a
container and set the timeout to zero in this specific case.

---

Index: zfs-linux-0.6.5.11/lib/libzfs/libzfs_util.c
===================================================================
--- zfs-linux-0.6.5.11.orig/lib/libzfs/libzfs_util.c
+++ zfs-linux-0.6.5.11/lib/libzfs/libzfs_util.c
@@ -712,7 +712,7 @@ static int
 libzfs_load_module(const char *module)
 {
 	char *argv[4] = {"/sbin/modprobe", "-q", (char *)module, (char *)0};
-	char *load_str, *timeout_str;
+	char *load_str, *timeout_str, *container_str;
 	long timeout = 10; /* seconds */
 	long busy_timeout = 10; /* milliseconds */
 	int load = 0, fd;
@@ -738,6 +738,16 @@ libzfs_load_module(const char *module)
 		return (ENXIO);
 
 	/*
+	 * If inside a container, set the timeout to zero (LP: #1760173),
+	 * however, this can be over-ridden by ZFS_MODULE_TIMEOUT just
+	 * in case the user explicitly wants to set the timeout for some
+	 * reason just for backward compatibilty
+	 */
+	container_str = getenv("container");
+	if (container_str) 
+		timeout = 0;
+	
+	/*
 	 * Device creation by udev is asynchronous and waiting may be
 	 * required.  Busy wait for 10ms and then fall back to polling every
 	 * 10ms for the allowed timeout (default 10s, max 10m).  This is

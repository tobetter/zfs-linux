From bff2361aeb32a83c26e2992733864ca99cced257 Mon Sep 17 00:00:00 2001
From: Brian Behlendorf <behlendorf1@llnl.gov>
Date: Thu, 23 May 2019 13:46:33 -0700
Subject: [PATCH] Linux 5.2 compat: rw_tryupgrade()

Commit torvalds/linux@46ad0840b has removed the architecture specific
rwsem source and headers leaving only the generic version.  As part
of this change the RWSEM_ACTIVE_READ_BIAS and RWSEM_ACTIVE_WRITE_BIAS
macros were moved to the private kernel/locking/rwsem.h header.
This results in a build failure because these macros were required
to implement the rw_tryupgrade() compatibility function.

In practice, this isn't a major problem because there are only a
few consumers of rw_tryupgrade() and because consumers of rw_tryupgrade
should be written to retry using rw_enter(RW_WRITER).

After auditing all of the callers only dmu_zfetch() was determined
not to perform a retry.  It has been updated in this commit to
resolve this issue.

That said, the rw_tryupgrade() functionality should be considered
for possible removal in a future release due to the difficultly
in supporting the interface.

Reviewed-by: Tomohiro Kusumi <kusumi.tomohiro@gmail.com>
Reviewed-by: Chunwei Chen <tuxoko@gmail.com>
Signed-off-by: Brian Behlendorf <behlendorf1@llnl.gov>
(backported from upstream commit bff2361aeb32a83c26e2992733864ca99cced257)
Signed-off-by: Colin Ian King <colin.king@canonical.com>
Closes #8730
---
 module/zfs/dmu_zfetch.c  | 13 ++++++++++---


Index: zfs-linux-0.7.12/module/zfs/dmu_zfetch.c
===================================================================
--- zfs-linux-0.7.12.orig/module/zfs/dmu_zfetch.c
+++ zfs-linux-0.7.12/module/zfs/dmu_zfetch.c
@@ -215,6 +215,7 @@ dmu_zfetch(zfetch_t *zf, uint64_t blkid,
 	int epbs, max_dist_blks, pf_nblks, ipf_nblks, i;
 	uint64_t end_of_access_blkid;
 	end_of_access_blkid = blkid + nblks;
+	krw_t rw = RW_READER;
 
 	if (zfs_prefetch_disable)
 		return;
@@ -226,7 +227,8 @@ dmu_zfetch(zfetch_t *zf, uint64_t blkid,
 	if (blkid == 0)
 		return;
 
-	rw_enter(&zf->zf_rwlock, RW_READER);
+retry:
+	rw_enter(&zf->zf_rwlock, rw);
 
 	/*
 	 * Find matching prefetch stream.  Depending on whether the accesses
@@ -264,8 +266,13 @@ dmu_zfetch(zfetch_t *zf, uint64_t blkid,
 		 * a new stream for it.
 		 */
 		ZFETCHSTAT_BUMP(zfetchstat_misses);
-		if (rw_tryupgrade(&zf->zf_rwlock))
-			dmu_zfetch_stream_create(zf, end_of_access_blkid);
+		if (rw == RW_READER && !rw_tryupgrade(&zf->zf_rwlock)) {
+			rw_exit(&zf->zf_rwlock);
+			rw = RW_WRITER;
+			goto retry;
+		}
+
+		dmu_zfetch_stream_create(zf, end_of_access_blkid);
 		rw_exit(&zf->zf_rwlock);
 		return;
 	}

Description: Support zsys systems
 Zsys is an enhanced and structured dataset layout for ZFS.
 .
 It enables advanced use cases by differentiating system,
 user data and persistent partitions to allow only partial
 permanent or temporary rollback without destroying intermediate
 snapshots.
Author: Jean-Baptiste Lallement <jean.baptiste@ubuntu.com>
        Didier Roche <didrocks@ubuntu.com>
Last-Update: 2019-06-06
Index: zfs-linux-0.8.4/etc/systemd/system-generators/zfs-mount-generator.in
===================================================================
--- zfs-linux-0.8.4.orig/etc/systemd/system-generators/zfs-mount-generator.in
+++ zfs-linux-0.8.4/etc/systemd/system-generators/zfs-mount-generator.in
@@ -29,6 +29,8 @@ FSLIST="@sysconfdir@/zfs/zfs-list.cache"
 
 [ -d "${FSLIST}" ] || exit 0
 
+OLD_IFS=$IFS
+
 do_fail() {
   printf 'zfs-mount-generator: %s\n' "$*" > /dev/kmsg
   exit 1
@@ -429,6 +431,55 @@ Options=defaults${opts},zfsutil" > "${de
 
 }
 
+ZSYS="@sbindir@/zsysd"
+ZFS="@sbindir@/zfs"
+ZPOOL="@sbindir@/zpool"
+initial_pools=""
+fs_pools=""
+all_pools=""
+on_exit() {
+    # Restore initial zpool import state
+    IFS=$OLD_IFS
+    for pool in ${all_pools}; do
+        if echo "${initial_pools}" | grep -wq "${pool}"; then
+            continue
+        fi
+        if echo "${fs_pools}" | grep -wq "${pool}"; then
+            continue
+        fi
+        zpool export "${pool}"
+    done
+}
+
+# TODO: we should move that in its own script, and use a systemd service as a fallback.
+# We need to condition this on current vs previous dataset (across the whole system), so
+# in /boot.
+# We will also recall the zedlet directly and regenerate the files if any changes were
+# made.
+initzsys() {
+  if [ ! -x "${ZSYS}" ]; then
+    return
+  fi
+  trap on_exit EXIT INT QUIT ABRT PIPE TERM
+
+  # import and list pools for zsys
+  initial_pools="$(${ZPOOL} list | awk '{if (NR>1) print $1}')"
+  ${ZPOOL} import -f -a -N -o cachefile=none 2>/dev/null
+  all_pools="$(zpool list | awk '{if (NR>1) print $1}')"
+  ${ZSYS} boot-prepare
+
+  PROPS="name,mountpoint,canmount,atime,relatime,devices,exec,readonly"
+  PROPS="${PROPS},setuid,nbmand"
+
+  for cachefile in "${FSLIST}/"* ; do
+    pool=`basename $cachefile`
+    fs_pools="${fs_pools} ${pool}"
+    ${ZFS} list -H -t filesystem -o $PROPS -r "${pool}" > "${cachefile}"
+  done
+}
+
+initzsys
+
 for cachefile in "${FSLIST}/"* ; do
   # Sort cachefile's lines by canmount, "on" before "noauto"
   # and feed each line into process_line
